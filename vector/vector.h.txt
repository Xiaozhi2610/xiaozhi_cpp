#pragma once
#include <iostream>

class vector
{
public:
	vector()
	{
		std::cout << "vector 无参构造，size 为0！" << std::endl;
		vec = new int[rongliang];
		std::cout << "现在vector容量为：" << rongliang << std::endl;
	}

	vector(int n)
	{
		std::cout << "vector的有参构造" << std::endl;
		size = n;
		while (rongliang < n)
		{
			rongliang *= 2;
		}
		vec = new int[rongliang];
	}

	vector(vector& v)
	{
		std::cout << "This is copy" << std::endl;
		size = v.size;
		rongliang = v.rongliang;
		int* vec = new int[rongliang];
		for (int i = 0; i < size; i++)
		{
			vec[i] = v.vec[i];
		}		
	}

	vector(vector&& v)
	{
		std::cout << "This is std::move()" << std::endl;
		size = v.size;
		rongliang = v.rongliang;
		vec = v.vec;
		v.vec = nullptr;
	}

	int insert(int v)
	{
		if (size + 1 == rongliang)
		{
			vector v(rongliang * 2);

		}
	}
private:
	int size = 0;
	int* vec = nullptr;
	int rongliang = 8;
};
